[상속]

1) private 접근제한자와 생성자는 상속 불가!!!!!!(생성자는 딱 한 번만 호출되고 재사용이 불가하기 때문에)

2) 단일 상속만 가능(부모는 한 명만) cf)다중 상속과 같은 효과의 인터페이스 사용

3)상속의 되물림 가능

4) 자바의 모든 클래스는 말 하지 않아도 object를 상속받고 있음(가장 위에 있는 최초, 최고. 단군 개념)

5) 부모는 자식 것 접근 불가

6) 상속을 받으면 각각 객체가 생성(3개가 상속받았을 때 부모는 다 달라짐, 부모 타입일 뿐)

7) extends






[다형성]

1) 반드시 상속관계일 때 성립

2) class A extends B{} 일 때 A를 A라 부를 수 있고 A를 B라 부를 수도 있다.
	->객체 생성할 때 생성되는 A를 B에 담을 수 있다.(A는 그대로 A이지만 접근 범위가 달라짐)
		: 부모 타입에 담으면 부모에게 상속받은 부분만 접근 가능
		  -> 형 변환하면 가능. 상속관계는 형 변환 가능(부모 그릇이 자식 그릇보다 더 크다.부모가 더 큰 범위)
		  -> objectDownCasting으로 형 변환(상속관계일 때만 사용 가능)

3) Object타입을 매개변수로 받으면 모든 타입의 변수들을 다 받을 수 있다는 의미





다형성은 두 가지
1)매개변수의 다형성
2)필드의 다형성 : 부모인 people 배열을 만들고 거기에 자식 클래스들 넣음
		   p[0]=new Customer();
		   p[1]=new employee();
			등으로 만들 수 있음. p[i]인 필드의 다형성



********재정의된 method는 부모 type일지라도 반드시 자식 호출
재정의된 메소드만 자식 부분 접근 가능!!!!!!!!!!!!!!


ex)

Child ch = new Child();
Parent p = new Child();

-부모 aa()가 자식에게서 오버라이딩 되었을 때
 자식의 p.aa()로 호출(부모 아님!!!!!)

-물론 부모에게 없고 자식에게만 있는 메소드는 p.cc()로 호출 불가능




[instanceof 연산자 -> 결과값은 boolean형]

1)반드시 상속관계

2) Object변수 Instanceof ObjectType
	->왼쪽의 변수가 오른쪽의 Type이 될 수 있느냐?

3)왼쪽이 자식, 오른쪽이 부모

부모와 자식의 조건이 같냐고 비교할 수 없기 때문에 instanceof 연산자를 사용한다.
			


[재정의 Overriding] : 다 같고 접근제한자 이외의 modifier 달라도 됨, 기능은 다르게

1)반드시 상속관계

2)부모 기능이 마음에 들지 않아 재정의

3) - modifier의 접근제한자는 반드시 부모 클래스의 제한자보다 크거나 같아야 한다 : 접근제한자 이외의 modifier(abstract, static, final...)은 같아도 달라도 상관없다

   - 리턴 타입, 메소드 이름, 인수 무조건 같아야 한다
   - 기능을 다르게 만듦







[상속 관계일 때 생성자]

1) 자식 클래스가 생성될 떄 부모 클래스의 기본 생성자 호출

2) 부모 클래스 만들 때 상속을 위해 꼭 기본 생성자를 만들자
	->다만 super(값,..) 써서 인위적으로 부모의 기본 생성자가 아니라 다른 생성자를 인위적으로 불러오는 방법 있음

3) 자식 클래스 생성자에 super() 안써도 기본으로 들어 있음



*접근제한자 크기 순서: public > protected > default(생략 가능) > private








*외부에서 ch.a 형식으로 호출할 때 부모에게도 a, 자식에게도 a가 있다면 자식 a로 호출
 (중복되면 외부에서는 부모 a 보이지 않음)






